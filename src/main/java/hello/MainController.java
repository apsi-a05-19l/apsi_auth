package hello;

import lombok.experimental.FieldDefaults;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

import hello.User;
import hello.UserRepository;

@RestController    // This means that this class is a Controller
@RequestMapping(path="")
public class MainController {
//	@Autowired // This means to get the bean called userRepository
//	           // Which is auto-generated by Spring, we will use it to handle the data
//	private UserRepository userRepository;
//
//	@Autowired
//	private  RoleRepository roleRepository;
//
	@Autowired
	private UserService userService;

	@GetMapping(path="/addUser") // Map ONLY GET Requests
	public @ResponseBody Boolean addNewUser (@RequestParam String username,
										    @RequestParam String email,
											@RequestParam String password) {
		userService.saveUser(username, email, password);
		return true;
	}

	@GetMapping("/")
	public String index() {
		return "You are successfully logged in!";
	}

	@GetMapping("/error")
	public String error() {
		return "You are not successfully logged in!";
	}
//
//	@GetMapping(path="/login") // Map ONLY GET Requests
//	public @ResponseBody Boolean login (@RequestParam String username,
//											 @RequestParam String email,
//											 @RequestParam String password) {
//		userService.saveUser(username, email, password);
//		return true;
//	}

//	@GetMapping(path="/addRole")
//	public @ResponseBody String addNewRole (@RequestParam String username,
//											@RequestParam String role) {
//		Role n = new Role();
//		User user = userRepository.findByUsername(username);
//
//		n.setRole(role);
//		n.setUserId(user.getId());
//
//		roleRepository.save(n);
//
////		user.addRole(n);
//
//		return "Role saved!";
//	}


	@GetMapping(path="/displayUsers")
	public @ResponseBody Iterable<User> getAllUsers() {
		return userService.getAllUsers();
	}

//	@GetMapping(path="/displayRoles")
//	public @ResponseBody Iterable<Role> getAllRoles() {
//		return roleRepository.findAll();
//	}
}
